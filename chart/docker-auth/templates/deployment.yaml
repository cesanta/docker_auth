apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docker-auth.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "docker-auth.name" . }}
    helm.sh/chart: {{ include "docker-auth.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "docker-auth.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "docker-auth.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}        
    {{- if .Values.podAnnotations }}
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    {{- end }}
    spec:
  {{- if .Values.podSecurityContext }}
    {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      {{- if .Values.containerSecurityContext }}
        {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- end }}
          args: ["--v={{ .Values.logging.level }}", "-logtostderr", "/config/auth_config.yml"]
          volumeMounts:
          - name: {{ include "docker-auth.name" . }}-config
            mountPath: /config
          - name: {{ include "docker-auth.name" . }}-secret
            mountPath: /config/certs
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ include "docker-auth.name" . }}
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ include "docker-auth.name" . }}-config
          configMap:
            name: {{ include "docker-auth.name" . }}
        - name: {{ include "docker-auth.name" . }}-secret
          secret:
{{- if .Values.secret.secretName }}
            secretName: {{ .Values.secret.secretName }}
{{- else }}
            secretName: {{ include "docker-auth.name" . }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
